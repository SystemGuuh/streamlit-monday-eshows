# Quantidade de projetos por estilo musical
GET_ESTILOS_POR_PROJETO = """
SELECT EM.DESCRICAO AS Estilo, COUNT(A.FK_ESTILO_PRINCIPAL) AS Quantidade
FROM T_ATRACOES A
INNER JOIN T_ESTILOS_MUSICAIS EM ON A.FK_ESTILO_PRINCIPAL = EM.ID
GROUP BY EM.DESCRICAO;
"""

# Quantidade de usuário por local
GET_USER_POR_LOCAL = """
SELECT AUD.UF AS UF, COUNT(AUD.ID) AS Quantidade 
FROM T_ADMIN_USERS_DADOS AUD 
WHERE AUD.UF IS NOT NULL AND AUD.UF != '' GROUP BY AUD.UF;
"""

# Quantidade de propostas por estilo musical
GET_ESTILOS_POR_PROPOSTA = """
SELECT Estilo, SUM(Quantidade) AS Total
FROM (
    SELECT EM.DESCRICAO AS Estilo, COUNT(O.FK_ESTILO_INTERESSE_1) AS Quantidade
    FROM T_OPORTUNIDADES O
    INNER JOIN T_ESTILOS_MUSICAIS EM ON O.FK_ESTILO_INTERESSE_1 = EM.ID
    GROUP BY EM.DESCRICAO

    UNION ALL

    SELECT EM.DESCRICAO AS Estilo, COUNT(O.FK_ESTILO_INTERESSE_2) AS Quantidade
    FROM T_OPORTUNIDADES O
    INNER JOIN T_ESTILOS_MUSICAIS EM ON O.FK_ESTILO_INTERESSE_2 = EM.ID
    GROUP BY EM.DESCRICAO

    UNION ALL

    SELECT EM.DESCRICAO AS Estilo, COUNT(O.FK_ESTILO_INTERESSE_3) AS Quantidade
    FROM T_OPORTUNIDADES O
    INNER JOIN T_ESTILOS_MUSICAIS EM ON O.FK_ESTILO_INTERESSE_3 = EM.ID
    GROUP BY EM.DESCRICAO
) AS subconsulta
GROUP BY Estilo;
"""

# Media valor bruto de oportunidade por UF
GET_CACHE_MEDIO_OPORTUNIDADES = """
SELECT O.UF AS UF, ROUND(AVG(O.VALOR_BRUTO), 2) AS Media_Valor
FROM T_OPORTUNIDADES O
WHERE O.UF IS NOT NULL AND O.UF != '' AND O.UF != 'x'
GROUP BY O.UF;
"""

# Ver dados do radar de implantação armazenado no BD Implantação
GET_RADAR_FROM_BD = """
SELECT
    C.ID AS ID_CASA,
    C.NAME AS CASA,
    (SELECT P.DATA_INICIO FROM T_PROPOSTAS P 
     WHERE P.FK_CONTRANTE = C.ID
     AND P.FK_STATUS_PROPOSTA IN (100,101,103,104)
     ORDER BY P.DATA_INICIO ASC
     LIMIT 1) AS PRIMEIRO_SHOW,
    (SELECT COUNT(CAST.ID) FROM T_CASTING CAST
     WHERE CAST.FK_CONTRATANTE = C.ID
     AND CAST.APROVADO = 1 AND CAST.STATUS = 0) AS CASTING_CADASTRADO,
    C.ACTIVE AS CASA_ATIVA,
    C.CONTROLADORIA_ESHOWS,
    (SELECT COUNT(DISTINCT GU.FK_USUARIO) FROM T_GRUPO_USUARIO GU 
     INNER JOIN ADMIN_USERS AU ON AU.ID = GU.FK_USUARIO
     WHERE GU.FK_COMPANY = C.ID AND GU.STATUS = 1
     AND AU.LOGIN NOT LIKE "%@eshows.com.br%" AND AU.LOGIN <> 'cunha.gabriel@yahoo.com') AS USUARIOS_ATIVOS,
    SC.STATUS AS STATUS_COMPANY
FROM
    T_COMPANIES C
LEFT JOIN
    T_STATUS_COMPANIES SC ON SC.ID = C.FK_STATUS_COMPANY
WHERE
    SC.STATUS = 'Implantação'
ORDER BY
    C.ID DESC;
"""

# Ver dados do radar de implantação armazenado no BD Estabilização

# Ver dados do radar de implantação armazenado no BD Leads Quentes